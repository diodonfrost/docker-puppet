name: Build

on:
  push:
  pull_request:
  schedule:
    - cron: '0 18 * * sun'

jobs:
  build:
    name: ${{ matrix.distribution.os }}-${{ matrix.distribution.version }}
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        distribution:
          - os: amazonlinux
            version: 2
          - os: amazonlinux
            version: 1
          - os: archlinux
            version: latest
          - os: centos
            version: 6
          - os: centos
            version: 7
          - os: centos
            version: 8
          - os: debian
            version: 8
          - os: debian
            version: 9
          - os: debian
            version: 10
          - os: fedora
            version: 26
          - os: fedora
            version: 27
          - os: fedora
            version: 28
          - os: fedora
            version: 29
          - os: fedora
            version: 30
          - os: fedora
            version: 31
          - os: fedora
            version: 32
          - os: opensuse
            version: 13.2
          - os: opensuse
            version: 15.1
          - os: opensuse
            version: 15
          - os: opensuse
            version: leap
          - os: opensuse
            version: tumbleweed
          - os: oraclelinux
            version: 6
          - os: oraclelinux
            version: 7
          - os: oraclelinux
            version: 8
          - os: ubuntu
            version: 14.04
          - os: ubuntu
            version: 16.04
          - os: ubuntu
            version: 18.04
          - os: ubuntu
            version: 20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Inspec
        run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec -v 4.18.51

      - name: Build Docker image
        run: docker build --no-cache --rm --file=${{ matrix.distribution.os }}-puppet/Dockerfile.${{ matrix.distribution.os }}-${{ matrix.distribution.version }} --tag=diodonfrost/puppet-${{ matrix.distribution.os }}:${{ matrix.distribution.version }} ${{ matrix.distribution.os }}-puppet

      - name: Test Docker image
        run: |
          container_id=$(mktemp)
          sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro diodonfrost/puppet-${{ matrix.distribution.os }}:${{ matrix.distribution.version }} > "${container_id}"
          inspec exec tests/inspec --chef-license accept-silent -t docker://$(cat ${container_id})
